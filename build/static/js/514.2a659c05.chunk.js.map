{"version":3,"file":"static/js/514.2a659c05.chunk.js","mappings":"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","sources":["components/Work.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { motion } from 'framer-motion';\nimport { workAPI } from '../services/api';\nimport WritePost from './WritePost';\nimport { useAuth } from '../contexts/AuthContext';\n\ninterface Post {\n  id: string;\n  title: string;\n  content: string;\n  date: string;\n  images?: string[];\n  thumbnail?: string | null;\n}\n\ninterface WorkProps {\n  onPostsLoaded?: (count: number) => void;\n}\n\nconst Work: React.FC<WorkProps> = ({ onPostsLoaded }) => {\n  const { isAuthenticated } = useAuth();\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [showWritePost, setShowWritePost] = useState(false);\n  const [selectedPost, setSelectedPost] = useState<Post | null>(null);\n  const [editingPost, setEditingPost] = useState<Post | null>(null);\n\n  const loadPosts = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await workAPI.getAllPosts();\n      if (response.success) {\n        setPosts(response.data);\n        if (onPostsLoaded) {\n          onPostsLoaded(response.data.length);  \n        }\n      } else {\n        setError(response.message);\n      }\n    } catch (err) {\n      setError('글을 불러오는데 실패했습니다.');\n      console.error('Work 로딩 오류:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, [onPostsLoaded]);\n\n  useEffect(() => {\n    loadPosts();\n  }, [loadPosts]);\n\n  const handleSavePost = (newPost: { title: string; content: string; date: string; images?: string[] }) => {\n    setShowWritePost(false);\n    // 새 데이터를 다시 로드하여 최신 상태 유지\n    loadPosts();\n  };\n\n  const handlePostClick = (post: Post) => {\n    setSelectedPost(post);\n  };\n\n  const handleBackToList = () => {\n    setSelectedPost(null);\n  };\n\n  const handleEditPost = (post: Post) => {\n    setEditingPost(post);\n    setSelectedPost(null);\n  };\n\n  const handleDeletePost = async (post: Post) => {\n    if (window.confirm(`\"${post.title}\" 기록을 정말 삭제하시겠습니까?`)) {\n      try {\n        const response = await workAPI.deletePost(post.id);\n        if (response.success) {\n          alert(response.message);\n          setSelectedPost(null);\n          loadPosts(); // 목록 새로고침\n        }\n      } catch (err) {\n        console.error('기록 삭제 오류:', err);\n        alert(err instanceof Error ? err.message : '기록 삭제에 실패했습니다.');\n      }\n    }\n  };\n\n  const formatContent = (content: string) => {\n    return content.split('\\n').map((line, index) => {\n      // 이미지 및 비디오 마크다운 처리를 위한 정규식\n      const mediaRegex = /(!{1,2})\\[([^\\]]*)\\]\\(([^)]+)\\)/g;\n      let lastIndex = 0;\n      const elements: (string | JSX.Element)[] = [];\n\n      line.replace(mediaRegex, (match, type, alt, url, offset) => {\n        // Add text before the match\n        elements.push(line.substring(lastIndex, offset));\n\n        if (type === '!!') { // 비디오: !![alt](url)\n          let videoElement;\n          if (url.includes('youtube.com') || url.includes('youtu.be')) {\n            const videoIdMatch = url.match(/(?:v=|vi\\/|embed\\/|\\.be\\/|youtu\\.be\\/)([a-zA-Z0-9_-]{11})/);\n            const videoId = videoIdMatch ? videoIdMatch[1] : null;\n            if (videoId) {\n              videoElement = (\n                <div style={{ position: 'relative', paddingBottom: '56.25%', height: 0, overflow: 'hidden', maxWidth: '100%', background: '#000' }}>\n                  <iframe\n                    src={`https://www.youtube.com/embed/${videoId}`}\n                    style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%' }}\n                    frameBorder=\"0\"\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                    allowFullScreen\n                    title={alt || 'YouTube video player'}\n                  ></iframe>\n                </div>\n              );\n            }\n          } else if (url.includes('vimeo.com')) {\n            const videoIdMatch = url.match(/vimeo\\.com\\/(?:video\\/)?(\\d+)/);\n            const videoId = videoIdMatch ? videoIdMatch[1] : null;\n            if(videoId) {\n              videoElement = (\n                <div style={{ position: 'relative', paddingBottom: '56.25%', height: 0, overflow: 'hidden', maxWidth: '100%', background: '#000' }}>\n                   <iframe \n                     src={`https://player.vimeo.com/video/${videoId}`}\n                     style={{position: 'absolute', top: 0, left: 0, width: '100%', height: '100%'}}\n                     frameBorder=\"0\" \n                     allow=\"autoplay; fullscreen; picture-in-picture\" \n                     allowFullScreen\n                     title={alt || 'Vimeo video player'}>\n                   </iframe>\n                </div>\n              );\n            }\n          } else { // 직접 링크\n            videoElement = <video src={url} controls style={{ maxWidth: '100%', borderRadius: '8px' }} title={alt} />;\n          }\n          \n          if(videoElement) {\n              elements.push(\n                <div key={`${index}-${offset}`} style={{ margin: '20px 0' }}>\n                  {videoElement}\n                </div>\n              );\n          } else {\n             elements.push(match);\n          }\n\n        } else if (type === '!') { // 이미지: ![alt](url)\n          elements.push(\n            <div key={`${index}-${offset}`} style={{ textAlign: 'center', margin: '20px 0' }}>\n              <img src={url} alt={alt || '이미지'} style={{ maxWidth: '100%', height: 'auto', borderRadius: '8px' }} />\n            </div>\n          );\n        }\n        \n        lastIndex = offset + match.length;\n        return match;\n      });\n\n      // Add the rest of the line\n      elements.push(line.substring(lastIndex));\n\n      return (\n        <React.Fragment key={index}>\n          {elements.map((el, i) => <React.Fragment key={i}>{el}</React.Fragment>)}\n          {index < content.split('\\n').length - 1 && <br />}\n        </React.Fragment>\n      );\n    });\n  };\n\n  if (showWritePost) {\n    return (\n      <WritePost \n        onSavePost={handleSavePost}\n        onBackToWork={() => setShowWritePost(false)}\n        postType=\"work\"\n      />\n    );\n  }\n\n  if (editingPost) {\n    return (\n      <WritePost \n        onSavePost={(newPostData) => {\n          setEditingPost(null);\n          loadPosts();\n        }}\n        onBackToWork={() => setEditingPost(null)}\n        postType=\"work\"\n        editPost={editingPost}\n      />\n    );\n  }\n\n  // 상세페이지 표시\n  if (selectedPost) {\n    return (\n      <div className=\"page-content\">\n        <div className=\"post-detail-container\">\n          <div className=\"post-detail-header\">\n            <motion.button \n              className=\"back-button\"\n              onClick={handleBackToList}\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n            >\n              ← 목록으로\n            </motion.button>\n            \n            {isAuthenticated && (\n              <div className=\"post-actions\">\n                <motion.button \n                  className=\"edit-button\"\n                  onClick={() => handleEditPost(selectedPost)}\n                  whileHover={{ scale: 1.05 }}\n                  whileTap={{ scale: 0.95 }}\n                >\n                  수정\n                </motion.button>\n                <motion.button \n                  className=\"delete-button\"\n                  onClick={() => handleDeletePost(selectedPost)}\n                  whileHover={{ scale: 1.05 }}\n                  whileTap={{ scale: 0.95 }}\n                >\n                  삭제\n                </motion.button>\n              </div>\n            )}\n          </div>\n          \n          <article className=\"post-article\">\n            <header className=\"post-header\">\n              <h1 className=\"post-title\">{selectedPost.title}</h1>\n              <div className=\"post-meta\">\n                <span className=\"post-date\">{selectedPost.date}</span>\n              </div>\n            </header>\n            \n            <div className=\"post-content\">\n              <div className=\"post-text\">\n                {formatContent(selectedPost.content)}\n              </div>\n            </div>\n          </article>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"page-content\">\n      <div className=\"page-header\">\n      <h1 className=\"page-title\">\n        ART WORK\n        <motion.div \n            className=\"page-subtitle-container\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ delay: 0.6, duration: 1 }}\n          ></motion.div>\n        <div className=\"page-subtitle\" style={{position: 'relative', top: 'auto', left: 'auto', transform: 'none', marginTop: '0'}}>소리·기억·관계로 이루어진 감각적 자산\n        <br />\n        <br />\n        NODE TREE는 예술을 개인의 소유가 아닌, 관계와 감응 속에서 함께 만들어가는 공공의 장으로   <br />\n        실천한다. 이 카테고리는 마을 주민·농부·청소년 등 다양한 존재가 예술의 주체로 참여해 구축해 온  <br />\n        창작 커먼즈의 기록이다.\n\n        </div>\n      </h1>\n      \n      <div className=\"work-container\">\n        <div className=\"work-header\">\n          {isAuthenticated && (\n            <motion.button \n              className=\"write-button\"\n              onClick={() => setShowWritePost(true)}\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.3 }}\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n            >\n              새 글 작성\n            </motion.button>\n          )}\n        </div>\n\n        {loading && (\n          <div className=\"loading-container\">\n            <motion.div \n              className=\"loading-spinner\"\n              animate={{ rotate: 360 }}\n              transition={{ duration: 1, repeat: Infinity, ease: \"linear\" }}\n            >\n              ⟳\n            </motion.div>\n            <p>기록을 불러오는 중...</p>\n          </div>\n        )}\n\n        {error && (\n          <div className=\"error-container\">\n            <p className=\"error-message\">오류: {error}</p>\n            <motion.button \n              className=\"retry-button\"\n              onClick={loadPosts}\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n            >\n              다시 시도\n            </motion.button>\n          </div>\n        )}\n\n        {!loading && !error && posts.length === 0 && (\n          <motion.div \n            className=\"empty-state\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ delay: 0.5 }}\n          >\n            <p>아직 기록된 내용이 없습니다.</p>\n            <p>새 기록을 작성해보세요!</p>\n          </motion.div>\n        )}\n\n        {!loading && !error && posts.length > 0 && (\n          <div className=\"posts-grid\">\n            {posts.map((post, index) => (\n              <div \n                key={index} \n                className=\"post-grid-item\"\n              >\n                <div \n                  className=\"post-grid-thumbnail\"\n                  onClick={() => handlePostClick(post)}\n                >\n                  {post.thumbnail ? (\n                    <img src={post.thumbnail} alt={post.title} />\n                  ) : (\n                    <div className=\"post-grid-no-image\">\n                      이미지 없음\n                    </div>\n                  )}\n                </div>\n                <div className=\"post-grid-content\">\n                  <h3 className=\"post-grid-title\">{post.title}</h3>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n    </div>\n  );\n};\n\nexport default Work; "],"names":["_ref","onPostsLoaded","isAuthenticated","useAuth","posts","setPosts","useState","loading","setLoading","error","setError","showWritePost","setShowWritePost","selectedPost","setSelectedPost","editingPost","setEditingPost","loadPosts","useCallback","async","response","workAPI","getAllPosts","success","data","length","message","err","console","useEffect","handleSavePost","newPost","handleBackToList","_jsx","WritePost","onSavePost","onBackToWork","postType","newPostData","editPost","className","children","_jsxs","motion","button","onClick","whileHover","scale","whileTap","window","confirm","concat","post","title","deletePost","id","alert","Error","handleDeletePost","date","content","split","map","line","index","lastIndex","elements","replace","match","type","alt","url","offset","push","substring","videoElement","includes","videoIdMatch","videoId","style","position","paddingBottom","height","overflow","maxWidth","background","src","top","left","width","frameBorder","allow","allowFullScreen","controls","borderRadius","margin","textAlign","React","el","i","div","initial","opacity","animate","transition","delay","duration","transform","marginTop","y","rotate","repeat","Infinity","ease","handlePostClick","thumbnail"],"sourceRoot":""}