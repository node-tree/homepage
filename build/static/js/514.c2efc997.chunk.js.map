{"version":3,"file":"static/js/514.c2efc997.chunk.js","mappings":"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","sources":["components/Work.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { motion } from 'framer-motion';\nimport { workAPI } from '../services/api';\nimport WritePost from './WritePost';\nimport { useAuth } from '../contexts/AuthContext';\n\ninterface Post {\n  id: string;\n  title: string;\n  content: string;\n  date: string;\n  images?: string[];\n  thumbnail?: string | null;\n}\n\ninterface WorkProps {\n  onPostsLoaded?: (count: number) => void;\n}\n\nconst Work: React.FC<WorkProps> = ({ onPostsLoaded }) => {\n  const { isAuthenticated } = useAuth();\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [showWritePost, setShowWritePost] = useState(false);\n  const [selectedPost, setSelectedPost] = useState<Post | null>(null);\n  const [editingPost, setEditingPost] = useState<Post | null>(null);\n  const [title, setTitle] = useState('ART WORK');\n  const [subtitle, setSubtitle] = useState('작업 기록');\n  const [isEditingHeader, setIsEditingHeader] = useState(false);\n\n  const loadPosts = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await workAPI.getAllPosts();\n      if (response.success) {\n        setPosts(response.data);\n        if (onPostsLoaded) {\n          onPostsLoaded(response.data.length);  \n        }\n      } else {\n        setError(response.message);\n      }\n    } catch (err) {\n      setError('글을 불러오는데 실패했습니다.');\n      console.error('Work 로딩 오류:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, [onPostsLoaded]);\n\n  useEffect(() => {\n    loadPosts();\n  }, [loadPosts]);\n\n  useEffect(() => {\n    const fetchHeader = async () => {\n      try {\n        const res = await workAPI.getWorkHeader();\n        if (res.success && res.data) {\n          setTitle(res.data.title || 'ART WORK');\n          setSubtitle(res.data.subtitle || '작업 기록');\n        }\n      } catch (e) {\n        // 에러 무시, 기본값 사용\n      }\n    };\n    fetchHeader();\n  }, []);\n\n  const handleSavePost = (newPost: { title: string; content: string; date: string; images?: string[] }) => {\n    setShowWritePost(false);\n    // 새 데이터를 다시 로드하여 최신 상태 유지\n    loadPosts();\n  };\n\n  const handlePostClick = (post: Post) => {\n    setSelectedPost(post);\n  };\n\n  const handleBackToList = () => {\n    setSelectedPost(null);\n  };\n\n  const handleEditPost = (post: Post) => {\n    setEditingPost(post);\n    setSelectedPost(null);\n  };\n\n  const handleDeletePost = async (post: Post) => {\n    if (window.confirm(`\"${post.title}\" 기록을 정말 삭제하시겠습니까?`)) {\n      try {\n        const response = await workAPI.deletePost(post.id);\n        if (response.success) {\n          alert(response.message);\n          setSelectedPost(null);\n          loadPosts(); // 목록 새로고침\n        }\n      } catch (err) {\n        console.error('기록 삭제 오류:', err);\n        alert(err instanceof Error ? err.message : '기록 삭제에 실패했습니다.');\n      }\n    }\n  };\n\n  const formatContent = (content: string) => {\n    return content.split('\\n').map((line, index) => {\n      // 이미지 및 비디오 마크다운 처리를 위한 정규식\n      const mediaRegex = /(!{1,2})\\[([^\\]]*)\\]\\(([^)]+)\\)/g;\n      let lastIndex = 0;\n      const elements: (string | JSX.Element)[] = [];\n\n      line.replace(mediaRegex, (match, type, alt, url, offset) => {\n        // Add text before the match\n        elements.push(line.substring(lastIndex, offset));\n\n        if (type === '!!') { // 비디오: !![alt](url)\n          let videoElement;\n          if (url.includes('youtube.com') || url.includes('youtu.be')) {\n            const videoIdMatch = url.match(/(?:v=|vi\\/|embed\\/|\\.be\\/|youtu\\.be\\/)([a-zA-Z0-9_-]{11})/);\n            const videoId = videoIdMatch ? videoIdMatch[1] : null;\n            if (videoId) {\n              videoElement = (\n                <div style={{ position: 'relative', paddingBottom: '56.25%', height: 0, overflow: 'hidden', maxWidth: '100%', background: '#000' }}>\n                  <iframe\n                    src={`https://www.youtube.com/embed/${videoId}`}\n                    style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100%' }}\n                    frameBorder=\"0\"\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                    allowFullScreen\n                    title={alt || 'YouTube video player'}\n                  ></iframe>\n                </div>\n              );\n            }\n          } else if (url.includes('vimeo.com')) {\n            const videoIdMatch = url.match(/vimeo\\.com\\/(?:video\\/)?(\\d+)/);\n            const videoId = videoIdMatch ? videoIdMatch[1] : null;\n            if(videoId) {\n              videoElement = (\n                <div style={{ position: 'relative', paddingBottom: '56.25%', height: 0, overflow: 'hidden', maxWidth: '100%', background: '#000' }}>\n                   <iframe \n                     src={`https://player.vimeo.com/video/${videoId}`}\n                     style={{position: 'absolute', top: 0, left: 0, width: '100%', height: '100%'}}\n                     frameBorder=\"0\" \n                     allow=\"autoplay; fullscreen; picture-in-picture\" \n                     allowFullScreen\n                     title={alt || 'Vimeo video player'}>\n                   </iframe>\n                </div>\n              );\n            }\n          } else { // 직접 링크\n            videoElement = <video src={url} controls style={{ maxWidth: '100%', borderRadius: '8px' }} title={alt} />;\n          }\n          \n          if(videoElement) {\n              elements.push(\n                <div key={`${index}-${offset}`} style={{ margin: '20px 0' }}>\n                  {videoElement}\n                </div>\n              );\n          } else {\n             elements.push(match);\n          }\n\n        } else if (type === '!') { // 이미지: ![alt](url)\n          elements.push(\n            <div key={`${index}-${offset}`} style={{ textAlign: 'center', margin: '20px 0' }}>\n              <img src={url} alt={alt || '이미지'} style={{ maxWidth: '100%', height: 'auto', borderRadius: '8px' }} />\n            </div>\n          );\n        }\n        \n        lastIndex = offset + match.length;\n        return match;\n      });\n\n      // Add the rest of the line\n      elements.push(line.substring(lastIndex));\n\n      return (\n        <React.Fragment key={index}>\n          {elements.map((el, i) => <React.Fragment key={i}>{el}</React.Fragment>)}\n          {index < content.split('\\n').length - 1 && <br />}\n        </React.Fragment>\n      );\n    });\n  };\n\n  const handleSaveHeader = async () => {\n    try {\n      await workAPI.updateWorkHeader({ title, subtitle });\n      setIsEditingHeader(false);\n    } catch (e) {\n      alert('저장에 실패했습니다.');\n    }\n  };\n\n  if (showWritePost) {\n    return (\n      <WritePost \n        onSavePost={handleSavePost}\n        onBackToWork={() => setShowWritePost(false)}\n        postType=\"work\"\n      />\n    );\n  }\n\n  if (editingPost) {\n    return (\n      <WritePost \n        onSavePost={(newPostData) => {\n          setEditingPost(null);\n          loadPosts();\n        }}\n        onBackToWork={() => setEditingPost(null)}\n        postType=\"work\"\n        editPost={editingPost}\n      />\n    );\n  }\n\n  // 상세페이지 표시\n  if (selectedPost) {\n    return (\n      <div className=\"page-content\">\n        <div className=\"post-detail-container\">\n          <div className=\"post-detail-header\">\n            <motion.button \n              className=\"back-button\"\n              onClick={handleBackToList}\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n            >\n              ← 목록으로\n            </motion.button>\n            \n            {isAuthenticated && (\n              <div className=\"post-actions\">\n                <motion.button \n                  className=\"edit-button\"\n                  onClick={() => handleEditPost(selectedPost)}\n                  whileHover={{ scale: 1.05 }}\n                  whileTap={{ scale: 0.95 }}\n                >\n                  수정\n                </motion.button>\n                <motion.button \n                  className=\"delete-button\"\n                  onClick={() => handleDeletePost(selectedPost)}\n                  whileHover={{ scale: 1.05 }}\n                  whileTap={{ scale: 0.95 }}\n                >\n                  삭제\n                </motion.button>\n              </div>\n            )}\n          </div>\n          \n          <article className=\"post-article\">\n            <header className=\"post-header\">\n              <h1 className=\"post-title\">{selectedPost.title}</h1>\n              <div className=\"post-meta\">\n                <span className=\"post-date\">{selectedPost.date}</span>\n              </div>\n            </header>\n            \n            <div className=\"post-content\">\n              <div className=\"post-text\">\n                {formatContent(selectedPost.content)}\n              </div>\n            </div>\n          </article>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"page-content\">\n      <div className=\"page-header\">\n        {isEditingHeader ? (\n          <div style={{\n            background: '#fff',\n            borderRadius: '16px',\n            boxShadow: '0 2px 12px rgba(0,0,0,0.08)',\n            padding: '24px 20px 16px 20px',\n            marginBottom: 16,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'stretch',\n            gap: 12,\n            maxWidth: 480,\n            width: '100%',\n            marginLeft: 'auto',\n            marginRight: 'auto',\n          }}>\n            <textarea value={title} onChange={e => setTitle(e.target.value)}\n              style={{\n                fontSize: '2rem',\n                fontWeight: 700,\n                border: 'none',\n                borderBottom: '2px solid #eee',\n                outline: 'none',\n                padding: '8px 0',\n                marginBottom: 4,\n                background: 'transparent',\n                textAlign: 'center',\n                borderRadius: 0,\n                transition: 'border-color 0.2s',\n                resize: 'none',\n                minHeight: 40,\n                overflow: 'hidden',\n              }}\n              placeholder=\"제목 입력\"\n              autoFocus\n              rows={1}\n              onInput={e => {\n                const ta = e.target as HTMLTextAreaElement;\n                ta.style.height = 'auto';\n                ta.style.height = ta.scrollHeight + 'px';\n              }}\n            />\n            <textarea value={subtitle} onChange={e => setSubtitle(e.target.value)}\n              style={{\n                fontSize: '1.1rem',\n                border: 'none',\n                borderBottom: '1.5px solid #eee',\n                outline: 'none',\n                padding: '6px 0',\n                background: 'transparent',\n                textAlign: 'center',\n                borderRadius: 0,\n                transition: 'border-color 0.2s',\n                resize: 'none',\n                minHeight: 32,\n                overflow: 'hidden',\n              }}\n              placeholder=\"부제목 입력\"\n              rows={1}\n              onInput={e => {\n                const ta = e.target as HTMLTextAreaElement;\n                ta.style.height = 'auto';\n                ta.style.height = ta.scrollHeight + 'px';\n              }}\n            />\n            <button onClick={handleSaveHeader}\n              style={{\n                background: '#222',\n                color: '#fff',\n                border: 'none',\n                borderRadius: '8px',\n                padding: '10px 0',\n                fontWeight: 600,\n                fontSize: '1rem',\n                marginTop: 8,\n                cursor: 'pointer',\n                boxShadow: '0 1px 4px rgba(0,0,0,0.08)',\n                transition: 'background 0.2s',\n                width: 120,\n                alignSelf: 'center',\n              }}\n            >저장</button>\n          </div>\n        ) : (\n          <>\n            <h1 className=\"page-title\">{title}</h1>\n            <div className=\"page-subtitle\">{subtitle}</div>\n            {isAuthenticated && (\n              <button onClick={() => setIsEditingHeader(true)} className=\"write-button\">편집</button>\n            )}\n          </>\n        )}\n      </div>\n\n      <div className=\"work-container\">\n        <div className=\"work-header\">\n          {isAuthenticated && (\n            <motion.button \n              className=\"write-button\"\n              onClick={() => setShowWritePost(true)}\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.3 }}\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n            >\n              새 글 작성\n            </motion.button>\n          )}\n        </div>\n\n        {loading && (\n          <div className=\"loading-container\">\n            <motion.div \n              className=\"loading-spinner\"\n              animate={{ rotate: 360 }}\n              transition={{ duration: 1, repeat: Infinity, ease: \"linear\" }}\n            >\n              ⟳\n            </motion.div>\n            <p>기록을 불러오는 중...</p>\n          </div>\n        )}\n\n        {error && (\n          <div className=\"error-container\">\n            <p className=\"error-message\">오류: {error}</p>\n            <motion.button \n              className=\"retry-button\"\n              onClick={loadPosts}\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n            >\n              다시 시도\n            </motion.button>\n          </div>\n        )}\n\n        {!loading && !error && posts.length === 0 && (\n          <motion.div \n            className=\"empty-state\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ delay: 0.5 }}\n          >\n            <p>아직 기록된 내용이 없습니다.</p>\n            <p>새 기록을 작성해보세요!</p>\n          </motion.div>\n        )}\n\n        {!loading && !error && posts.length > 0 && (\n          <div className=\"posts-grid\">\n            {posts.map((post, index) => (\n              <div \n                key={index} \n                className=\"post-grid-item\"\n              >\n                <div \n                  className=\"post-grid-thumbnail\"\n                  onClick={() => handlePostClick(post)}\n                >\n                  {post.thumbnail ? (\n                    <img src={post.thumbnail} alt={post.title} />\n                  ) : (\n                    <div className=\"post-grid-no-image\">\n                      이미지 없음\n                    </div>\n                  )}\n                </div>\n                <div className=\"post-grid-content\">\n                  <h3 className=\"post-grid-title\">{post.title}</h3>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Work; "],"names":["_ref","onPostsLoaded","isAuthenticated","useAuth","posts","setPosts","useState","loading","setLoading","error","setError","showWritePost","setShowWritePost","selectedPost","setSelectedPost","editingPost","setEditingPost","title","setTitle","subtitle","setSubtitle","isEditingHeader","setIsEditingHeader","loadPosts","useCallback","async","response","workAPI","getAllPosts","success","data","length","message","err","console","useEffect","res","getWorkHeader","e","fetchHeader","handleSavePost","newPost","handleBackToList","_jsx","WritePost","onSavePost","onBackToWork","postType","newPostData","editPost","className","children","_jsxs","motion","button","onClick","whileHover","scale","whileTap","window","confirm","concat","post","deletePost","id","alert","Error","handleDeletePost","date","content","split","map","line","index","lastIndex","elements","replace","match","type","alt","url","offset","push","substring","videoElement","includes","videoIdMatch","videoId","style","position","paddingBottom","height","overflow","maxWidth","background","src","top","left","width","frameBorder","allow","allowFullScreen","controls","borderRadius","margin","textAlign","React","el","i","boxShadow","padding","marginBottom","display","flexDirection","alignItems","gap","marginLeft","marginRight","value","onChange","target","fontSize","fontWeight","border","borderBottom","outline","transition","resize","minHeight","placeholder","autoFocus","rows","onInput","ta","scrollHeight","updateWorkHeader","color","marginTop","cursor","alignSelf","_Fragment","initial","opacity","y","animate","delay","div","rotate","duration","repeat","Infinity","ease","handlePostClick","thumbnail"],"sourceRoot":""}